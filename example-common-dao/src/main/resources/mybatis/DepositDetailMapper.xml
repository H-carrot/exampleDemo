<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.netease.haitao.finance.expense.dao.mapper.DepositDetailMapper">
    <resultMap id="DepositDetailMap" type="DepositDetail" >
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="contract_no" property="contractNo" jdbcType="VARCHAR"/>
        <result column="contract_state" property="contractState" jdbcType="INTEGER"/>
        <result column="supplier_id" property="supplierId" jdbcType="BIGINT"/>
        <result column="bu_name" property="buName" jdbcType="VARCHAR"/>
        <result column="pay_type" property="payType" jdbcType="INTEGER"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="contract_need_amount" property="contractNeedAmount" jdbcType="DECIMAL"/>
        <result column="contract_add_amount" property="contractAddAmount" jdbcType="DECIMAL"/>
        <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL"/>
        <result column="receivable_offset_amount" property="receivableOffsetAmount" jdbcType="DECIMAL"/>
        <result column="receivable_no" property="receivableNo" jdbcType="VARCHAR"/>
        <result column="receivable_state" property="receivableState" jdbcType="INTEGER"/>
        <result column="payable_amount" property="payableAmount" jdbcType="DECIMAL"/>
        <result column="payable_no" property="payableNo" jdbcType="VARCHAR"/>
        <result column="payable_state" property="payableState" jdbcType="INTEGER"/>
        <result column="urgent_flag" property="urgentFlag" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="allDepositDetailColumns">
        id,contract_no,contract_state,supplier_id,bu_name,pay_type,company_name,contract_need_amount,
        contract_add_amount,receivable_amount,receivable_offset_amount,receivable_no,receivable_state,
        payable_amount,payable_no,payable_state,urgent_flag,create_time,update_time
    </sql>

    <insert id="insertDepositDetail" parameterType="DepositDetail">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE" >
            select <include refid="commonSeq.deposit_detail_nextval"/> as id from dual
        </selectKey>
        insert into fes_deposit_detail (<include refid="allDepositDetailColumns" />)
        values (
        #{id,jdbcType=BIGINT},
        #{contractNo,jdbcType=VARCHAR},
        #{contractState,jdbcType=INTEGER},
        #{supplierId,jdbcType=BIGINT},
        #{buName,jdbcType=VARCHAR},
        #{payType,jdbcType=INTEGER},
        #{companyName,jdbcType=VARCHAR},
        #{contractNeedAmount,jdbcType=DECIMAL},
        #{contractAddAmount,jdbcType=DECIMAL},
        #{receivableAmount,jdbcType=DECIMAL},
        #{receivableOffsetAmount,jdbcType=DECIMAL},
        #{receivableNo,jdbcType=VARCHAR},
        #{receivableState,jdbcType=INTEGER},
        #{payableAmount,jdbcType=DECIMAL},
        #{payableNo,jdbcType=VARCHAR},
        #{payableState,jdbcType=INTEGER},
        #{urgentFlag,jdbcType=INTEGER},
        systimestamp,
        systimestamp
        )
    </insert>

    <select id="countDepositDetailByMerchantId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(*) from  fes_deposit_detail where supplier_id= #{supplierId,jdbcType=BIGINT}
    </select>

    <update id="updateContractState" >
        update fes_deposit_detail set contract_state= #{contractState, jdbcType=INTEGER}
        where contract_no = #{contractNo, jdbcType=VARCHAR}
    </update>

    <update id="updateUrgentFlag" >
        update fes_deposit_detail set urgent_flag= #{urgentFlag, jdbcType=INTEGER}
        where contract_no = #{contractNo, jdbcType=VARCHAR}
    </update>

    <select id="countUrgentFlagByMerchantId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(*) from  fes_deposit_detail where supplier_id= #{supplierId,jdbcType=BIGINT} and
        urgent_flag = 1
    </select>

    <select id="getSupplierIdByContractId" parameterType="java.lang.String" resultType="java.lang.Long">
        select supplier_id from fes_deposit_detail where contract_no= #{contractNo,jdbcType=VARCHAR}
    </select>

    <select id="getAllPayedBySupplierId" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
        select sum(payable_amount) from fes_deposit_detail where supplier_id = #{supplierId,jdbcType=BIGINT}
        and payable_state = 1
    </select>

    <select id="getBalanceNeedToMinus" parameterType="java.lang.Long" resultType="java.math.BigDecimal">
        select sum(receivable_amount-receivable_offset_amount) from fes_deposit_detail where supplier_id = #{supplierId,jdbcType=BIGINT}
        and receivable_state = 2
    </select>

    <select id="countBalanceState" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(*) from fes_deposit_detail where supplier_id = #{supplierId,jdbcType=BIGINT} and receivable_amount != 0.00
        and  receivable_amount is not null and receivable_state = 0
    </select>

    <select id="getUrgentFlagByContractId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select urgent_flag from fes_deposit_detail where contract_no = #{contractNo,jdbcType=VARCHAR}
    </select>

    <update id="updateReceivableState" >
        update fes_deposit_detail set receivable_state= #{receivableState, jdbcType=INTEGER}, receivable_offset_amount = #{receivableOffsetAmount,jdbcType=DECIMAL}
        where contract_no = #{contractNo, jdbcType=VARCHAR}
    </update>

    <update id="updatePayableState" >
        update fes_deposit_detail set payable_state= #{payableState, jdbcType=INTEGER}, payable_amount = #{payableAmount,jdbcType=DECIMAL},
        payable_no = #{payableNo,jdbcType=VARCHAR}  where contract_no = #{contractNo, jdbcType=VARCHAR}
    </update>

</mapper>

